---
import { Button } from "./ui/button";
import ConfigStatusBadge from "./ConfigStatusBadge";

interface Props {
  currentPath?: string;
}

const { currentPath = "" } = Astro.props;

// Check if we're in development mode for DEV_JWT
const isDev = import.meta.env.NODE_ENV === "development";
---

<nav class="border-b border-border bg-card">
  <div class="container mx-auto px-4">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo and main navigation -->
      <div class="flex items-center space-x-6">
        <a 
          href="/notebooks" 
          class="text-xl font-bold text-foreground hover:text-primary transition-colors"
        >
          10x Phrase Follower
        </a>
        
        <div class="flex items-center space-x-4">
          <a 
            href="/notebooks" 
            class={`text-sm font-medium transition-colors hover:text-primary ${
              currentPath === "/notebooks" || currentPath?.startsWith("/notebooks/") 
                ? "text-primary" 
                : "text-muted-foreground"
            }`}
          >
            Notebooks
          </a>
          <a 
            href="/import" 
            class={`text-sm font-medium transition-colors hover:text-primary ${
              currentPath === "/import" 
                ? "text-primary" 
                : "text-muted-foreground"
            }`}
          >
            Import
          </a>
        </div>
      </div>

      <!-- Right side navigation -->
      <div class="flex items-center space-x-4">
        <!-- TTS Config Status Badge -->
        <div class="flex items-center">
          <ConfigStatusBadge client:load />
        </div>

        <!-- Settings gear icon -->
        <Button variant="ghost" size="sm" className="p-2" asChild>
          <a href="/settings">
          <svg 
            class="h-4 w-4" 
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24"
          >
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
            ></path>
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
            ></path>
          </svg>
          </a>
        </Button>

        <!-- User menu (placeholder for now) -->
        <div class="flex items-center space-x-2">
          {isDev && (
            <span class="text-xs px-2 py-1 rounded-full bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
              DEV
            </span>
          )}
          <Button variant="ghost" size="sm">
            <svg 
              class="h-4 w-4 mr-2" 
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path 
                stroke-linecap="round" 
                stroke-linejoin="round" 
                stroke-width="2" 
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
              ></path>
            </svg>
            User
          </Button>
        </div>
      </div>
    </div>
  </div>
</nav>
